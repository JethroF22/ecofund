/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CampaignFactory,
  CampaignFactoryInterface,
} from "../CampaignFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "campaigns",
    outputs: [
      {
        internalType: "contract Campaign",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_campaignGoal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_campaignDeadline",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    name: "createCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c3f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063141961bc1461003b5780637c6dd4351461006b575b600080fd5b610055600480360381019061005091906101a2565b610087565b6040516100629190610247565b60405180910390f35b610085600480360381019061008091906101cb565b6100c6565b005b6000818154811061009757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008383836040516100d79061016b565b6100e393929190610262565b604051809103906000f0801580156100ff573d6000803e3d6000fd5b5090506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6108e28061032883390190565b600081359050610187816102f9565b92915050565b60008135905061019c81610310565b92915050565b6000602082840312156101b457600080fd5b60006101c28482850161018d565b91505092915050565b6000806000606084860312156101e057600080fd5b60006101ee8682870161018d565b93505060206101ff8682870161018d565b925050604061021086828701610178565b9150509250925092565b61022381610299565b82525050565b610232816102d5565b82525050565b610241816102cb565b82525050565b600060208201905061025c6000830184610229565b92915050565b60006060820190506102776000830186610238565b6102846020830185610238565b610291604083018461021a565b949350505050565b60006102a4826102ab565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102e0826102e7565b9050919050565b60006102f2826102ab565b9050919050565b61030281610299565b811461030d57600080fd5b50565b610319816102cb565b811461032457600080fd5b5056fe6080604052600060045534801561001557600080fd5b506040516108e23803806108e2833981810160405281019061003791906100b7565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260018190555081600281905550505050610170565b60008151905061009c81610142565b92915050565b6000815190506100b181610159565b92915050565b6000806000606084860312156100cc57600080fd5b60006100da868287016100a2565b93505060206100eb868287016100a2565b92505060406100fc8682870161008d565b9150509250925092565b600061011182610118565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61014b81610106565b811461015657600080fd5b50565b61016281610138565b811461016d57600080fd5b50565b6107638061017f6000396000f3fe60806040526004361061007b5760003560e01c806388ffe8671161004e57806388ffe8671461012a5780639f3d391e14610134578063ec4cd0cf1461015f578063ef068a7f1461018a5761007b565b806302d05d3f146100805780631d6f8223146100ab578063343576f5146100d65780633ccfd60b14610113575b600080fd5b34801561008c57600080fd5b506100956101b5565b6040516100a291906104fa565b60405180910390f35b3480156100b757600080fd5b506100c06101d9565b6040516100cd9190610590565b60405180910390f35b3480156100e257600080fd5b506100fd60048036038101906100f8919061043b565b6101df565b60405161010a9190610590565b60405180910390f35b34801561011f57600080fd5b506101286101f7565b005b610132610383565b005b34801561014057600080fd5b50610149610407565b6040516101569190610590565b60405180910390f35b34801561016b57600080fd5b5061017461040d565b6040516101819190610515565b60405180910390f35b34801561019657600080fd5b5061019f610420565b6040516101ac9190610590565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60036020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027c90610530565b60405180910390fd5b60025442116102c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c090610550565b60405180910390fd5b600560009054906101000a900460ff16610318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030f90610570565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610380573d6000803e3d6000fd5b50565b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555034600460008282546103d991906105bc565b925050819055506001544710610405576001600560006101000a81548160ff0219169083151502179055505b565b60045481565b600560009054906101000a900460ff1681565b60015481565b60008135905061043581610716565b92915050565b60006020828403121561044d57600080fd5b600061045b84828501610426565b91505092915050565b61046d81610624565b82525050565b61047c81610636565b82525050565b600061048f600c836105ab565b915061049a8261069b565b602082019050919050565b60006104b26015836105ab565b91506104bd826106c4565b602082019050919050565b60006104d5601a836105ab565b91506104e0826106ed565b602082019050919050565b6104f481610662565b82525050565b600060208201905061050f6000830184610464565b92915050565b600060208201905061052a6000830184610473565b92915050565b6000602082019050818103600083015261054981610482565b9050919050565b60006020820190508181036000830152610569816104a5565b9050919050565b60006020820190508181036000830152610589816104c8565b9050919050565b60006020820190506105a560008301846104eb565b92915050565b600082825260208201905092915050565b60006105c782610662565b91506105d283610662565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156106075761060661066c565b5b828201905092915050565b600061061d82610642565b9050919050565b600061062f82610642565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f556e617574686f72697365640000000000000000000000000000000000000000600082015250565b7f43616d706169676e207374696c6c206163746976650000000000000000000000600082015250565b7f43616d706169676e20676f616c73206e6f742072656163686564000000000000600082015250565b61071f81610612565b811461072a57600080fd5b5056fea26469706673582212208feb5ee201711b3f6024208946d0b71edc18cea8eeee36ba2f8286788f85fa5864736f6c63430008040033a2646970667358221220b19c03d235855908fe0608f510078b308c5499dd2ed2d195c5f9b3db671549df64736f6c63430008040033";

export class CampaignFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CampaignFactory> {
    return super.deploy(overrides || {}) as Promise<CampaignFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CampaignFactory {
    return super.attach(address) as CampaignFactory;
  }
  connect(signer: Signer): CampaignFactory__factory {
    return super.connect(signer) as CampaignFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignFactoryInterface {
    return new utils.Interface(_abi) as CampaignFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CampaignFactory {
    return new Contract(address, _abi, signerOrProvider) as CampaignFactory;
  }
}
